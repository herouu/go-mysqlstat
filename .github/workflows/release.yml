name: Go Release Binaries Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  check_and_create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Check if Release Exists
        id: check_release
        uses: actions/github-script@v4
        with:
          script: |
            const tag = context.payload.ref.replace('refs/tags/', '');
            try {
              await github.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag: tag
              });
              core.setOutput('exists', true);
              core.info(`Release for tag ${tag} already exists.`);
            } catch (error) {
              if (error.status === 404) {
                core.setOutput('exists', false);
                core.info(`Release for tag ${tag} does not exist.`);
              } else {
                core.setFailed(`Failed to check release status for tag ${tag}: ${error.message}`);
              }
            }

      - name: Create Release If Not Exists
        if: ${{ steps.check_release.outputs.exists == 'false' }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            This is an automated release.
          draft: false
          prerelease: false

  build-go-binary:
    needs: [check_and_create_release]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [ linux, windows, darwin ] # 需要打包的系统
        goarch: [ amd64, arm64 ]
        exclude:
          - goarch: arm64
            goos: windows
    steps:
      - uses: actions/checkout@v4
      - uses: wangyoucao577/go-release-action@v1.50
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} # 一个默认的变量，用来实现往 Release 中添加文件
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          overwrite: true
          goversion: 1.22 # 可以指定编译使用的 Golang 版本
          binary_name: "go-mysqlstat"
          compress_assets: auto